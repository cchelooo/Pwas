{"ast":null,"code":"import { create } from \"zustand\";\nconst useCartStore = create(set => ({\n  products: [],\n  cart: [],\n  initializeProducts: productList => {\n    const initializedProducts = productList.map(product => ({\n      ...product,\n      originalStock: product.stock // Guardamos el stock original\n    }));\n    set({\n      products: initializedProducts\n    });\n\n    // Guardar en localStorage\n    localStorage.setItem(\"products\", JSON.stringify(initializedProducts));\n  },\n  addToCart: (product, quantity) => set(state => {\n    const updatedProducts = state.products.map(p => p.id === product.id ? {\n      ...p,\n      stock: p.stock - quantity\n    } : p);\n    const existingProduct = state.cart.find(item => item.id === product.id);\n    const updatedCart = existingProduct ? state.cart.map(item => item.id === product.id ? {\n      ...item,\n      quantity: item.quantity + quantity\n    } : item) : [...state.cart, {\n      ...product,\n      quantity\n    }];\n    localStorage.setItem(\"products\", JSON.stringify(updatedProducts));\n    return {\n      products: updatedProducts,\n      cart: updatedCart\n    };\n  }),\n  removeFromCart: (productId, quantity) => set(state => {\n    const updatedProducts = state.products.map(p => p.id === productId ? {\n      ...p,\n      stock: p.stock + quantity\n    } : p);\n    const updatedCart = state.cart.filter(item => item.id !== productId);\n    localStorage.setItem(\"products\", JSON.stringify(updatedProducts));\n    return {\n      products: updatedProducts,\n      cart: updatedCart\n    };\n  }),\n  clearCart: () => set(state => {\n    const restoredProducts = state.products.map(p => ({\n      ...p,\n      stock: p.originalStock // Restaurar el stock original\n    }));\n    localStorage.setItem(\"products\", JSON.stringify(restoredProducts));\n    return {\n      cart: [],\n      products: restoredProducts\n    };\n  })\n}));\nexport default useCartStore;","map":{"version":3,"names":["create","useCartStore","set","products","cart","initializeProducts","productList","initializedProducts","map","product","originalStock","stock","localStorage","setItem","JSON","stringify","addToCart","quantity","state","updatedProducts","p","id","existingProduct","find","item","updatedCart","removeFromCart","productId","filter","clearCart","restoredProducts"],"sources":["C:/Users/msant/Desktop/actualcodigo/src/Store/CartStore.jsx"],"sourcesContent":["import { create } from \"zustand\";\r\n\r\nconst useCartStore = create((set) => ({\r\n  products: [],\r\n  cart: [],\r\n\r\n  initializeProducts: (productList) => {\r\n    const initializedProducts = productList.map((product) => ({\r\n      ...product,\r\n      originalStock: product.stock, // Guardamos el stock original\r\n    }));\r\n    set({ products: initializedProducts });\r\n\r\n    // Guardar en localStorage\r\n    localStorage.setItem(\"products\", JSON.stringify(initializedProducts));\r\n  },\r\n\r\n  addToCart: (product, quantity) =>\r\n    set((state) => {\r\n      const updatedProducts = state.products.map((p) =>\r\n        p.id === product.id\r\n          ? { ...p, stock: p.stock - quantity }\r\n          : p\r\n      );\r\n\r\n      const existingProduct = state.cart.find((item) => item.id === product.id);\r\n      const updatedCart = existingProduct\r\n        ? state.cart.map((item) =>\r\n            item.id === product.id\r\n              ? { ...item, quantity: item.quantity + quantity }\r\n              : item\r\n          )\r\n        : [...state.cart, { ...product, quantity }];\r\n\r\n      localStorage.setItem(\"products\", JSON.stringify(updatedProducts));\r\n      return { products: updatedProducts, cart: updatedCart };\r\n    }),\r\n\r\n  removeFromCart: (productId, quantity) =>\r\n    set((state) => {\r\n      const updatedProducts = state.products.map((p) =>\r\n        p.id === productId\r\n          ? { ...p, stock: p.stock + quantity }\r\n          : p\r\n      );\r\n\r\n      const updatedCart = state.cart.filter((item) => item.id !== productId);\r\n\r\n      localStorage.setItem(\"products\", JSON.stringify(updatedProducts));\r\n      return { products: updatedProducts, cart: updatedCart };\r\n    }),\r\n\r\n  clearCart: () =>\r\n    set((state) => {\r\n      const restoredProducts = state.products.map((p) => ({\r\n        ...p,\r\n        stock: p.originalStock, // Restaurar el stock original\r\n      }));\r\n\r\n      localStorage.setItem(\"products\", JSON.stringify(restoredProducts));\r\n      return { cart: [], products: restoredProducts };\r\n    }),\r\n}));\r\n\r\nexport default useCartStore;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}